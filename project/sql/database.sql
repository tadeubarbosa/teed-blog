-- MySQL Script generated by MySQL Workbench
-- Wed Aug  2 17:14:09 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema teed_blog
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `teed_blog` ;

-- -----------------------------------------------------
-- Schema teed_blog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `teed_blog` DEFAULT CHARACTER SET utf8 ;
USE `teed_blog` ;

-- -----------------------------------------------------
-- Table `teed_blog`.`user_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`user_types` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`user_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NULL,
  `description` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`users` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_type_id` INT NOT NULL DEFAULT 1,
  `desactived` TINYINT NULL,
  `name` VARCHAR(150) NULL,
  `email` VARCHAR(100) NULL,
  `password` VARCHAR(50) NULL,
  `image` VARCHAR(60) NULL,
  `slug` VARCHAR(60) NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `user_type_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_users_user_types1_idx` (`user_type_id` ASC),
  CONSTRAINT `fk_users_user_types1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `teed_blog`.`user_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blog_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blog_types` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blog_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blog_categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blog_categories` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blog_categories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(60) NOT NULL,
  `description` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`themes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`themes` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`themes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `title` VARCHAR(60) NOT NULL,
  `description` LONGTEXT NOT NULL,
  `css` VARCHAR(60) NULL,
  `private` INT NULL DEFAULT NULL,
  `based_template_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_themes_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_themes_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blogs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blogs` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blogs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `blog_type_id` INT NOT NULL,
  `blog_category_id` INT NOT NULL,
  `tema_id` INT NOT NULL,
  `desactived` INT NULL DEFAULT NULL,
  `title` VARCHAR(100) NOT NULL,
  `slug` VARCHAR(50) NOT NULL,
  `description` LONGTEXT NULL,
  `comments_rating` INT NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `user_id`, `blog_type_id`, `blog_category_id`, `tema_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_blog_users1_idx` (`user_id` ASC),
  INDEX `fk_blog_blog_types1_idx` (`blog_type_id` ASC),
  INDEX `fk_blog_categories1_idx` (`blog_category_id` ASC),
  INDEX `fk_blog_themes1_idx` (`tema_id` ASC),
  CONSTRAINT `fk_blog_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_blog_types1`
    FOREIGN KEY (`blog_type_id`)
    REFERENCES `teed_blog`.`blog_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_categories1`
    FOREIGN KEY (`blog_category_id`)
    REFERENCES `teed_blog`.`blog_categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_themes1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `teed_blog`.`themes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`denunciations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`denunciations` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`denunciations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `blog_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `user_attendant_id` INT NOT NULL,
  `accepted` INT NULL DEFAULT NULL,
  `title` VARCHAR(250) NOT NULL,
  `content` LONGTEXT NOT NULL,
  `images` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `blog_id`, `user_id`, `user_attendant_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_denunciations_blog1_idx` (`blog_id` ASC),
  INDEX `fk_denunciations_users1_idx` (`user_id` ASC),
  INDEX `fk_denunciations_users2_idx` (`user_attendant_id` ASC),
  CONSTRAINT `fk_denunciations_blog1`
    FOREIGN KEY (`blog_id`)
    REFERENCES `teed_blog`.`blogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_denunciations_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_denunciations_users2`
    FOREIGN KEY (`user_attendant_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`posts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`posts` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`posts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `blog_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `slug` VARCHAR(200) NOT NULL,
  `title` VARCHAR(250) NULL,
  `tags` VARCHAR(250) NULL DEFAULT NULL,
  `content` LONGTEXT NULL,
  `images` LONGTEXT NULL,
  `publicated` INT NULL DEFAULT 0,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `blog_id`, `user_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_posts_blog1_idx` (`blog_id` ASC),
  INDEX `fk_posts_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_posts_blog1`
    FOREIGN KEY (`blog_id`)
    REFERENCES `teed_blog`.`blogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_posts_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`comments` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `content` LONGTEXT NOT NULL,
  `publicated` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `user_id`, `post_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_comments_users1_idx` (`user_id` ASC),
  INDEX `fk_comments_posts1_idx` (`post_id` ASC),
  CONSTRAINT `fk_comments_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `teed_blog`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_posts1`
    FOREIGN KEY (`post_id`)
    REFERENCES `teed_blog`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `teed_blog`.`user_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`user_types` (`id`, `title`, `description`) VALUES (DEFAULT, 'Usuário', 'Usuários comuns do site.');
INSERT INTO `teed_blog`.`user_types` (`id`, `title`, `description`) VALUES (DEFAULT, 'Moderador', 'Moderadores, resposáveis por editar blogs e usuários.');
INSERT INTO `teed_blog`.`user_types` (`id`, `title`, `description`) VALUES (DEFAULT, 'Administrador', 'Todos os privilégios.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`users` (`id`, `user_type_id`, `desactived`, `name`, `email`, `password`, `image`, `slug`, `created_at`, `updated_at`) VALUES (DEFAULT, DEFAULT, NULL, 'Teed Blogger', 'falecom@email.com', '123456', NULL, 'teed-blogger', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`blog_categories`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`blog_categories` (`id`, `title`, `description`) VALUES (DEFAULT, 'Pessoal', 'Blogs pessoais, assuntos variados.');
INSERT INTO `teed_blog`.`blog_categories` (`id`, `title`, `description`) VALUES (DEFAULT, 'Profissional', 'Trabalhos, empresariais etc.');
INSERT INTO `teed_blog`.`blog_categories` (`id`, `title`, `description`) VALUES (DEFAULT, 'Fotografia', 'Fotografias em geral.');
INSERT INTO `teed_blog`.`blog_categories` (`id`, `title`, `description`) VALUES (DEFAULT, 'Família', 'Notícias e informações sobre a família.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`themes`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`themes` (`id`, `user_id`, `title`, `description`, `css`, `private`, `based_template_id`) VALUES (DEFAULT, DEFAULT, 'Template padrão', 'Este template é o padrão para todos os blogs', NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`blogs`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`blogs` (`id`, `user_id`, `blog_type_id`, `blog_category_id`, `tema_id`, `desactived`, `title`, `slug`, `description`, `comments_rating`, `created_at`, `updated_at`) VALUES (DEFAULT, 1, 2, 1, 1, NULL, 'teedblog news', 'tb-news', 'Novidades do teedblog', 1, NULL, NULL);

COMMIT;

USE `teed_blog`;

DELIMITER $$

USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`users_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`users_AFTER_DELETE` AFTER DELETE ON `users` FOR EACH ROW
BEGIN
	DELETE FROM `denunciations` WHERE `denunciations`.`user_id`=NEW.`id`;
    DELETE FROM `posts` WHERE `posts`.`user_id`=NEW.`id`;
    DELETE FROM `blogs` WHERE `blogs`.`user_id`=NEW.`id`;
    DELETE FROM `comments` WHERE `comments`.`user_id`=NEW.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`themes_BEFORE_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`themes_BEFORE_DELETE` BEFORE DELETE ON `themes` FOR EACH ROW
BEGIN
	UPDATE `blogs` SET `blogs`.`tema_id`=1 WHERE `blogs`.`tema_id`=OLD.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`blogs_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`blogs_AFTER_DELETE` AFTER DELETE ON `blogs` FOR EACH ROW
BEGIN
	DELETE FROM `comments` WHERE `comments`.`blog_id`=NEW.`id`;
    DELETE FROM `posts` WHERE `posts`.`blog_id`=NEW.`id`;
    DELETE FROM `denunciations` WHERE `denunciations`.`blog_id`=NEW.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`posts_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`posts_AFTER_DELETE` AFTER DELETE ON `posts` FOR EACH ROW
BEGIN
	DELETE FROM `comments` WHERE `comments`.`id`=NEW.id;
END$$


DELIMITER ;
