-- MySQL Script generated by MySQL Workbench
-- Wed Aug  2 17:14:09 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema teed_blog
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `teed_blog` ;

-- -----------------------------------------------------
-- Schema teed_blog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `teed_blog` DEFAULT CHARACTER SET utf8 ;
USE `teed_blog` ;

-- -----------------------------------------------------
-- Table `teed_blog`.`usuario_tipos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`usuario_tipos` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`usuario_tipos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `descricao` VARCHAR(100) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_tipo_id` INT NOT NULL DEFAULT 1,
  `desativado` TINYINT NULL,
  `nome` VARCHAR(150) NULL,
  `email` VARCHAR(100) NULL,
  `senha` VARCHAR(50) NULL,
  `imagem` VARCHAR(60) NULL,
  `slug` VARCHAR(60) NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `usuario_tipo_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_usuarios_usuario_tipos1_idx` (`usuario_tipo_id` ASC),
  CONSTRAINT `fk_usuarios_usuario_tipos1`
    FOREIGN KEY (`usuario_tipo_id`)
    REFERENCES `teed_blog`.`usuario_tipos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blog_tipos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blog_tipos` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blog_tipos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blog_categorias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blog_categorias` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blog_categorias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(60) NOT NULL,
  `descricao` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`temas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`temas` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`temas` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `titulo` VARCHAR(60) NOT NULL,
  `descricao` LONGTEXT NOT NULL,
  `css` VARCHAR(60) NULL,
  `privado` INT NULL DEFAULT NULL,
  `template_baseado_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `usuario_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_temas_usuarios1_idx` (`usuario_id` ASC),
  CONSTRAINT `fk_temas_usuarios1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`blogs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`blogs` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`blogs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `blog_tipo_id` INT NOT NULL,
  `blog_categoria_id` INT NOT NULL,
  `tema_id` INT NOT NULL,
  `desativado` INT NULL DEFAULT NULL,
  `titulo` VARCHAR(100) NOT NULL,
  `slug` VARCHAR(50) NOT NULL,
  `descricao` LONGTEXT NULL,
  `avaliacao_comentarios` INT NULL DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `usuario_id`, `blog_tipo_id`, `blog_categoria_id`, `tema_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_blog_usuarios1_idx` (`usuario_id` ASC),
  INDEX `fk_blog_blog_tipos1_idx` (`blog_tipo_id` ASC),
  INDEX `fk_blog_categorias1_idx` (`blog_categoria_id` ASC),
  INDEX `fk_blog_temas1_idx` (`tema_id` ASC),
  CONSTRAINT `fk_blog_usuarios1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_blog_tipos1`
    FOREIGN KEY (`blog_tipo_id`)
    REFERENCES `teed_blog`.`blog_tipos` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_categorias1`
    FOREIGN KEY (`blog_categoria_id`)
    REFERENCES `teed_blog`.`blog_categorias` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_blog_temas1`
    FOREIGN KEY (`tema_id`)
    REFERENCES `teed_blog`.`temas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`denuncias`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`denuncias` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`denuncias` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `blog_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `usuario_atendente_id` INT NOT NULL,
  `aceito` INT NULL DEFAULT NULL,
  `titulo` VARCHAR(250) NOT NULL,
  `conteudo` LONGTEXT NOT NULL,
  `imagens` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `blog_id`, `usuario_id`, `usuario_atendente_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_denuncias_blog1_idx` (`blog_id` ASC),
  INDEX `fk_denuncias_usuarios1_idx` (`usuario_id` ASC),
  INDEX `fk_denuncias_usuarios2_idx` (`usuario_atendente_id` ASC),
  CONSTRAINT `fk_denuncias_blog1`
    FOREIGN KEY (`blog_id`)
    REFERENCES `teed_blog`.`blogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_denuncias_usuarios1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_denuncias_usuarios2`
    FOREIGN KEY (`usuario_atendente_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`postagens`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`postagens` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`postagens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `blog_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `slug` VARCHAR(200) NOT NULL,
  `titulo` VARCHAR(250) NULL,
  `tags` VARCHAR(250) NULL DEFAULT NULL,
  `conteudo` LONGTEXT NULL,
  `imagens` LONGTEXT NULL,
  `publicado` INT NULL DEFAULT 0,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `blog_id`, `usuario_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_postagens_blog1_idx` (`blog_id` ASC),
  INDEX `fk_postagens_usuarios1_idx` (`usuario_id` ASC),
  CONSTRAINT `fk_postagens_blog1`
    FOREIGN KEY (`blog_id`)
    REFERENCES `teed_blog`.`blogs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_postagens_usuarios1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teed_blog`.`comentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teed_blog`.`comentarios` ;

CREATE TABLE IF NOT EXISTS `teed_blog`.`comentarios` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `postagem_id` INT NOT NULL,
  `conteudo` LONGTEXT NOT NULL,
  `publicado` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `usuario_id`, `postagem_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_comentarios_usuarios1_idx` (`usuario_id` ASC),
  INDEX `fk_comentarios_postagens1_idx` (`postagem_id` ASC),
  CONSTRAINT `fk_comentarios_usuarios1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `teed_blog`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comentarios_postagens1`
    FOREIGN KEY (`postagem_id`)
    REFERENCES `teed_blog`.`postagens` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `teed_blog`.`usuario_tipos`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`usuario_tipos` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Usuário', 'Usuários comuns do site.');
INSERT INTO `teed_blog`.`usuario_tipos` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Moderador', 'Moderadores, resposáveis por editar blogs e usuários.');
INSERT INTO `teed_blog`.`usuario_tipos` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Administrador', 'Todos os privilégios.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`usuarios`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`usuarios` (`id`, `usuario_tipo_id`, `desativado`, `nome`, `email`, `senha`, `imagem`, `slug`, `created_at`, `updated_at`) VALUES (DEFAULT, DEFAULT, NULL, 'Teed Blogger', 'falecom@email.com', '123456', NULL, 'teed-blogger', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`blog_categorias`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`blog_categorias` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Pessoal', 'Blogs pessoais, assuntos variados.');
INSERT INTO `teed_blog`.`blog_categorias` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Profissional', 'Trabalhos, empresariais etc.');
INSERT INTO `teed_blog`.`blog_categorias` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Fotografia', 'Fotografias em geral.');
INSERT INTO `teed_blog`.`blog_categorias` (`id`, `titulo`, `descricao`) VALUES (DEFAULT, 'Família', 'Notícias e informações sobre a família.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`temas`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`temas` (`id`, `usuario_id`, `titulo`, `descricao`, `css`, `privado`, `template_baseado_id`) VALUES (DEFAULT, DEFAULT, 'Template padrão', 'Este template é o padrão para todos os blogs', NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `teed_blog`.`blogs`
-- -----------------------------------------------------
START TRANSACTION;
USE `teed_blog`;
INSERT INTO `teed_blog`.`blogs` (`id`, `usuario_id`, `blog_tipo_id`, `blog_categoria_id`, `tema_id`, `desativado`, `titulo`, `slug`, `descricao`, `avaliacao_comentarios`, `created_at`, `updated_at`) VALUES (DEFAULT, 1, 2, 1, 1, NULL, 'teedblog news', 'tb-news', 'Novidades do teedblog', 1, NULL, NULL);

COMMIT;

USE `teed_blog`;

DELIMITER $$

USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`usuarios_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`usuarios_AFTER_DELETE` AFTER DELETE ON `usuarios` FOR EACH ROW
BEGIN
	DELETE FROM `denuncias` WHERE `denuncias`.`usuario_id`=NEW.`id`;
    DELETE FROM `postagens` WHERE `postagens`.`usuario_id`=NEW.`id`;
    DELETE FROM `blogs` WHERE `blogs`.`usuario_id`=NEW.`id`;
    DELETE FROM `comentarios` WHERE `comentarios`.`usuario_id`=NEW.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`temas_BEFORE_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`temas_BEFORE_DELETE` BEFORE DELETE ON `temas` FOR EACH ROW
BEGIN
	UPDATE `blogs` SET `blogs`.`tema_id`=1 WHERE `blogs`.`tema_id`=OLD.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`blogs_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`blogs_AFTER_DELETE` AFTER DELETE ON `blogs` FOR EACH ROW
BEGIN
	DELETE FROM `comentarios` WHERE `comentarios`.`blog_id`=NEW.`id`;
    DELETE FROM `postagens` WHERE `postagens`.`blog_id`=NEW.`id`;
    DELETE FROM `denuncias` WHERE `denuncias`.`blog_id`=NEW.`id`;
END$$


USE `teed_blog`$$
DROP TRIGGER IF EXISTS `teed_blog`.`postagens_AFTER_DELETE` $$
USE `teed_blog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `teed_blog`.`postagens_AFTER_DELETE` AFTER DELETE ON `postagens` FOR EACH ROW
BEGIN
	DELETE FROM `comentarios` WHERE `comentarios`.`id`=NEW.id;
END$$


DELIMITER ;
